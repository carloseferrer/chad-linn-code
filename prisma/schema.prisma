generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User roles in the system
enum UserRole {
  ADMIN
  USER
}

// User account statuses
enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  firstName    String?
  lastName     String?
  role         UserRole    @default(USER)
  status       UserStatus  @default(ACTIVE)
  lastLoginAt  DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  timeEntries  TimeEntry[] // Relaci√≥n con las entradas de tiempo
  notionUserId String? // ID del usuario en Notion para relacionar

  @@index([email])
  @@index([role])
  @@index([status])
}

model TimeEntry {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  date        DateTime
  hoursWorked Float
  projectId   String // ID del proyecto en Notion
  taskId      String // ID de la tarea en Notion
  notionId    String? // ID de la entrada en Notion
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?  @db.Text

  @@index([userId])
  @@index([date])
  @@index([projectId])
}

// Cache de proyectos de Notion
model NotionProject {
  id        String   @id // ID del proyecto en Notion
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

// Cache de tareas de Notion
model NotionTask {
  id        String   @id // ID de la tarea en Notion
  name      String
  projectId String // ID del proyecto en Notion
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
  @@index([name])
}
